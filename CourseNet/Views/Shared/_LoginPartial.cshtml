@using Microsoft.AspNetCore.Identity
@using CourseNet.Data.Models.Entities
@using CourseNet.Services.Data.Interfaces
@using CourseNet.Web.Infrastructure.Extensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject SignInManager<CourseUser> SignInManager
@inject UserManager<CourseUser> UserManager
@inject IInstructorService InstructorService

@{
    bool isInstructor = await InstructorService.InstructorExistsByUserId(User.GetId());
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Здравейте, @User.Identity?.Name!</a>
        </li>
        @if (!isInstructor)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Instructor" asp-action="Become">Стани инструктор</a>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Изход</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Регистрация</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Вход</a>
        </li>
    }
</ul>
